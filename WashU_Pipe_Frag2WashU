#!/usr/bin/perl

use strict;
use warnings;
use POSIX;
use Getopt::Long;
use FindBin '$Bin';
use lib $Bin;
use WashU_Pipe_Module;

use Data::Dumper;

###################################################################################
###################################################################################
##This file is Copyright (C) 2015, Steven Wingett (steven.wingett@babraham.ac.uk)##
##                                                                               ##
##                                                                               ##
##This file is part of WashU_Pipe.                                               ##
##                                                                               ##
##WashU_Pipe is free software: you can redistribute it and/or modify             ##
##it under the terms of the GNU General Public License as published by           ##
##the Free Software Foundation, either version 3 of the License, or              ##
##(at your option) any later version.                                            ##
##                                                                               ##
##WashU_Pipe is distributed in the hope that it will be useful,                  ##
##but WITHOUT ANY WARRANTY; without even the implied warranty of                 ##
##MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                  ##
##GNU General Public License for more details.                                   ##
##                                                                               ##
##You should have received a copy of the GNU General Public License              ##
##along with WashU_Pipe.  If not, see <http://www.gnu.org/licenses/>.            ##
###################################################################################
###################################################################################



#############################################################################################
#Perl script to convert a restriction fragment coordinates file
#a format that can be read by the WashU browser
#WashU browser format:
#chr1   \t   111   \t   222   \t   chr2:333-444,55   \t   1   \t   .
#chr2   \t   333   \t   444   \t   chr1:111-222,55   \t   2   \t   .
#
#After running this script
#1) Import ucsc_tools and tabix
#2) bedSort filein fileout
#3) bgzip bedfile
#4) tabix -p bed gedfile.gz
#5)Upload the tbi file and the bedfile.gz to the remote server.  The http link needs to be
#passed to the washU browser.
############################################################################################

my $version;
my $filelist;

my $config_result = GetOptions(
	"filelist=s" => \$filelist,
	"version" => \$version
);
die "Could not parse options" unless ($config_result);

if($version){
	$version = get_version();
	print "WashU_Pipe v$version\n";
	exit(0);
}

my @files;
push(@files, getFilenames($filelist)) if defined $filelist;
push (@files, @ARGV) if @ARGV;
@files = deduplicate_array(@files);
die "Please specify files to process.\n" unless (@files);

print "Converting fragments data to WashU format\n";

foreach my $file (@files){

	open(IN, '<', $file) or die "Could not open '$file' : $!";
	open(OUT, '>', "$file.washu_format.txt") or die "Could not open '$file.washu_format.txt' : $!";
	
	print "Processing $file\n";
	

	my $i = 1;
	while(<IN>){
		chomp;
		my $readF = $_;
		my $readR = scalar <IN>;
		chomp $readR;
		
		my $csomeF = (split(/\t/, $readF))[0];
		my $csomeR = (split(/\t/, $readR))[0];

		$csomeF = csome_formatter($csomeF);
		$csomeR = csome_formatter($csomeR);

		my $startF = (split(/\t/, $readF))[1];
		my $startR = (split(/\t/, $readR))[1];
		my $endF = (split(/\t/, $readF))[2];
		my $endR = (split(/\t/, $readR))[2];
		
		my $score = (split(/\t/, $readF))[3];

		print OUT "$csomeF\t$startF\t$endF\t".$csomeR.':'.$startR.'-'.$endR.','."$score\t$i\t.\n";
		$i++;
		print OUT "$csomeR\t$startR\t$endR\t".$csomeF.':'.$startF.'-'.$endF.','."$score\t$i\t.\n";
		$i++;		
	}	
	close IN or die "Could not close filehandle on $file : $!";
	close OUT or die "Could not close filehandle on $file.washu_format.txt : $!";
}

print "Conversion complete\n";

exit;